{"name": "test_star_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=96.0.4664.55)\nStacktrace:\n0   chromedriver                        0x0000000104db1408 __gxx_personality_v0 + 543364\n1   chromedriver                        0x0000000104d47138 __gxx_personality_v0 + 108468\n2   chromedriver                        0x00000001049467d8 chromedriver + 157656\n3   chromedriver                        0x000000010492a550 chromedriver + 42320\n4   chromedriver                        0x0000000104991ae0 chromedriver + 465632\n5   chromedriver                        0x000000010499ef88 chromedriver + 520072\n6   chromedriver                        0x000000010496b238 chromedriver + 307768\n7   chromedriver                        0x0000000104d74c7c __gxx_personality_v0 + 295672\n8   chromedriver                        0x0000000104d88bd8 __gxx_personality_v0 + 377428\n9   chromedriver                        0x0000000104d8d2b0 __gxx_personality_v0 + 395564\n10  chromedriver                        0x0000000104d899f8 __gxx_personality_v0 + 381044\n11  chromedriver                        0x0000000104d6a754 __gxx_personality_v0 + 253392\n12  chromedriver                        0x0000000104da2a38 __gxx_personality_v0 + 483508\n13  chromedriver                        0x0000000104da2bac __gxx_personality_v0 + 483880\n14  chromedriver                        0x0000000104db7fec __gxx_personality_v0 + 570984\n15  libsystem_pthread.dylib             0x000000019d0ee06c _pthread_start + 320\n16  libsystem_pthread.dylib             0x000000019d0e8da0 thread_start + 8", "trace": "self = <TestCase.test_wiki.TestWiki object at 0x7fcf0051da10>, drivers = <selenium.webdriver.remote.webdriver.WebDriver (session=\"64d715544b2b55c0ae7b459bad912ff4\")>\n\n    @allure.feature('收藏按钮')\n    def test_star_button(self,drivers):\n        \"\"\"收藏按钮测试\"\"\"\n        wiki = WikiPage(drivers)\n>       wiki.click_star_button()\n\nTestCase/test_wiki.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_object/wikipage.py:107: in click_star_button\n    self.is_click(wiki['收藏按钮'])\npage/webpage.py:87: in is_click\n    ele = self.find_element(locator)\npage/webpage.py:50: in find_element\n    EC.presence_of_element_located(args)), locator)\npage/webpage.py:45: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage/webpage.py:50: in <lambda>\n    EC.presence_of_element_located(args)), locator)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:78: in until\n    value = method(self._driver)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/support/expected_conditions.py:64: in _predicate\n    return driver.find_element(*locator)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:1246: in find_element\n    'value': value})['value']\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcf0051d090>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...00019d0ee06c _pthread_start + 320\\\\n16  libsystem_pthread.dylib             0x000000019d0e8da0 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=96.0.4664.55)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104db1408 __gxx_personality_v0 + 543364\nE       1   chromedriver                        0x0000000104d47138 __gxx_personality_v0 + 108468\nE       2   chromedriver                        0x00000001049467d8 chromedriver + 157656\nE       3   chromedriver                        0x000000010492a550 chromedriver + 42320\nE       4   chromedriver                        0x0000000104991ae0 chromedriver + 465632\nE       5   chromedriver                        0x000000010499ef88 chromedriver + 520072\nE       6   chromedriver                        0x000000010496b238 chromedriver + 307768\nE       7   chromedriver                        0x0000000104d74c7c __gxx_personality_v0 + 295672\nE       8   chromedriver                        0x0000000104d88bd8 __gxx_personality_v0 + 377428\nE       9   chromedriver                        0x0000000104d8d2b0 __gxx_personality_v0 + 395564\nE       10  chromedriver                        0x0000000104d899f8 __gxx_personality_v0 + 381044\nE       11  chromedriver                        0x0000000104d6a754 __gxx_personality_v0 + 253392\nE       12  chromedriver                        0x0000000104da2a38 __gxx_personality_v0 + 483508\nE       13  chromedriver                        0x0000000104da2bac __gxx_personality_v0 + 483880\nE       14  chromedriver                        0x0000000104db7fec __gxx_personality_v0 + 570984\nE       15  libsystem_pthread.dylib             0x000000019d0ee06c _pthread_start + 320\nE       16  libsystem_pthread.dylib             0x000000019d0e8da0 thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchWindowException"}, "description": "收藏按钮测试", "attachments": [{"name": "stderr", "source": "2d1b9da3-76fb-4070-864a-aca71fff3019-attachment.txt", "type": "text/plain"}], "start": 1647952662546, "stop": 1647952664859, "uuid": "69209928-1f2f-4e10-b22a-ccb086e528f2", "historyId": "34f3966f672c4a075230d3d104169d3a", "testCaseId": "76bd2c22df5288c0c8715e2509665272", "fullName": "TestCase.test_wiki.TestWiki#test_star_button", "labels": [{"name": "feature", "value": "收藏按钮"}, {"name": "feature", "value": "测试wiki模块"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_wiki"}, {"name": "subSuite", "value": "TestWiki"}, {"name": "host", "value": "qinleideMacBook-Pro.local"}, {"name": "thread", "value": "13848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_wiki"}]}